Enabled checks:
    bugprone-argument-comment
    bugprone-assert-side-effect
    bugprone-bad-signal-to-kill-thread
    bugprone-bool-pointer-implicit-conversion
    bugprone-branch-clone
    bugprone-copy-constructor-init
    bugprone-dangling-handle
    bugprone-dynamic-static-initializers
    bugprone-exception-escape
    bugprone-fold-init-type
    bugprone-forward-declaration-namespace
    bugprone-forwarding-reference-overload
    bugprone-inaccurate-erase
    bugprone-incorrect-roundings
    bugprone-infinite-loop
    bugprone-integer-division
    bugprone-lambda-function-name
    bugprone-macro-parentheses
    bugprone-macro-repeated-side-effects
    bugprone-misplaced-operator-in-strlen-in-alloc
    bugprone-misplaced-pointer-arithmetic-in-alloc
    bugprone-misplaced-widening-cast
    bugprone-move-forwarding-reference
    bugprone-multiple-statement-macro
    bugprone-no-escape
    bugprone-not-null-terminated-result
    bugprone-parent-virtual-call
    bugprone-posix-return
    bugprone-redundant-branch-condition
    bugprone-signal-handler
    bugprone-sizeof-container
    bugprone-sizeof-expression
    bugprone-spuriously-wake-up-functions
    bugprone-string-constructor
    bugprone-string-integer-assignment
    bugprone-string-literal-with-embedded-nul
    bugprone-suspicious-enum-usage
    bugprone-suspicious-memset-usage
    bugprone-suspicious-missing-comma
    bugprone-suspicious-semicolon
    bugprone-suspicious-string-compare
    bugprone-swapped-arguments
    bugprone-terminating-continue
    bugprone-throw-keyword-missing
    bugprone-too-small-loop-variable
    bugprone-undefined-memory-manipulation
    bugprone-undelegated-constructor
    bugprone-unused-raii
    bugprone-unused-return-value
    bugprone-use-after-move
    bugprone-virtual-near-miss
    clang-analyzer-apiModeling.StdCLibraryFunctions
    clang-analyzer-apiModeling.TrustNonnull
    clang-analyzer-apiModeling.google.GTest
    clang-analyzer-apiModeling.llvm.CastValue
    clang-analyzer-apiModeling.llvm.ReturnValue
    clang-analyzer-core.CallAndMessage
    clang-analyzer-core.CallAndMessageModeling
    clang-analyzer-core.DivideZero
    clang-analyzer-core.DynamicTypePropagation
    clang-analyzer-core.NonNullParamChecker
    clang-analyzer-core.NonnilStringConstants
    clang-analyzer-core.NullDereference
    clang-analyzer-core.StackAddrEscapeBase
    clang-analyzer-core.StackAddressEscape
    clang-analyzer-core.UndefinedBinaryOperatorResult
    clang-analyzer-core.VLASize
    clang-analyzer-core.builtin.BuiltinFunctions
    clang-analyzer-core.builtin.NoReturnFunctions
    clang-analyzer-core.uninitialized.ArraySubscript
    clang-analyzer-core.uninitialized.Assign
    clang-analyzer-core.uninitialized.Branch
    clang-analyzer-core.uninitialized.CapturedBlockVariable
    clang-analyzer-core.uninitialized.UndefReturn
    clang-analyzer-cplusplus.InnerPointer
    clang-analyzer-cplusplus.Move
    clang-analyzer-cplusplus.PlacementNew
    clang-analyzer-cplusplus.PureVirtualCall
    clang-analyzer-cplusplus.SelfAssignment
    clang-analyzer-cplusplus.SmartPtrModeling
    clang-analyzer-cplusplus.VirtualCallModeling
    clang-analyzer-deadcode.DeadStores
    clang-analyzer-fuchsia.HandleChecker
    clang-analyzer-nullability.NullPassedToNonnull
    clang-analyzer-nullability.NullReturnedFromNonnull
    clang-analyzer-nullability.NullabilityBase
    clang-analyzer-nullability.NullableDereferenced
    clang-analyzer-nullability.NullablePassedToNonnull
    clang-analyzer-nullability.NullableReturnedFromNonnull
    clang-analyzer-optin.cplusplus.UninitializedObject
    clang-analyzer-optin.cplusplus.VirtualCall
    clang-analyzer-optin.mpi.MPI-Checker
    clang-analyzer-optin.osx.OSObjectCStyleCast
    clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
    clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker
    clang-analyzer-optin.performance.GCDAntipattern
    clang-analyzer-optin.performance.Padding
    clang-analyzer-optin.portability.UnixAPI
    clang-analyzer-osx.API
    clang-analyzer-osx.MIG
    clang-analyzer-osx.NSOrCFErrorDerefChecker
    clang-analyzer-osx.NumberObjectConversion
    clang-analyzer-osx.OSObjectRetainCount
    clang-analyzer-osx.ObjCProperty
    clang-analyzer-osx.SecKeychainAPI
    clang-analyzer-osx.cocoa.AtSync
    clang-analyzer-osx.cocoa.AutoreleaseWrite
    clang-analyzer-osx.cocoa.ClassRelease
    clang-analyzer-osx.cocoa.Dealloc
    clang-analyzer-osx.cocoa.IncompatibleMethodTypes
    clang-analyzer-osx.cocoa.Loops
    clang-analyzer-osx.cocoa.MissingSuperCall
    clang-analyzer-osx.cocoa.NSAutoreleasePool
    clang-analyzer-osx.cocoa.NSError
    clang-analyzer-osx.cocoa.NilArg
    clang-analyzer-osx.cocoa.NonNilReturnValue
    clang-analyzer-osx.cocoa.ObjCGenerics
    clang-analyzer-osx.cocoa.RetainCount
    clang-analyzer-osx.cocoa.RetainCountBase
    clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak
    clang-analyzer-osx.cocoa.SelfInit
    clang-analyzer-osx.cocoa.SuperDealloc
    clang-analyzer-osx.cocoa.UnusedIvars
    clang-analyzer-osx.cocoa.VariadicMethodTypes
    clang-analyzer-osx.coreFoundation.CFError
    clang-analyzer-osx.coreFoundation.CFNumber
    clang-analyzer-osx.coreFoundation.CFRetainRelease
    clang-analyzer-osx.coreFoundation.containers.OutOfBounds
    clang-analyzer-osx.coreFoundation.containers.PointerSizedValues
    clang-analyzer-security.FloatLoopCounter
    clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
    clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
    clang-analyzer-security.insecureAPI.UncheckedReturn
    clang-analyzer-security.insecureAPI.bcmp
    clang-analyzer-security.insecureAPI.bcopy
    clang-analyzer-security.insecureAPI.bzero
    clang-analyzer-security.insecureAPI.decodeValueOfObjCType
    clang-analyzer-security.insecureAPI.getpw
    clang-analyzer-security.insecureAPI.gets
    clang-analyzer-security.insecureAPI.mkstemp
    clang-analyzer-security.insecureAPI.mktemp
    clang-analyzer-security.insecureAPI.strcpy
    clang-analyzer-security.insecureAPI.vfork
    clang-analyzer-unix.API
    clang-analyzer-unix.DynamicMemoryModeling
    clang-analyzer-unix.Malloc
    clang-analyzer-unix.MallocSizeof
    clang-analyzer-unix.MismatchedDeallocator
    clang-analyzer-unix.Vfork
    clang-analyzer-unix.cstring.BadSizeArg
    clang-analyzer-unix.cstring.CStringModeling
    clang-analyzer-unix.cstring.NullArg
    clang-analyzer-valist.CopyToSelf
    clang-analyzer-valist.Uninitialized
    clang-analyzer-valist.Unterminated
    clang-analyzer-valist.ValistBase
    clang-analyzer-webkit.NoUncountedMemberChecker
    clang-analyzer-webkit.RefCntblBaseVirtualDtor
    clang-analyzer-webkit.UncountedLambdaCapturesChecker
    google-build-explicit-make-pair
    google-build-namespaces
    google-build-using-namespace
    google-default-arguments
    google-explicit-constructor
    google-global-names-in-headers
    google-objc-avoid-nsobject-new
    google-objc-avoid-throwing-exception
    google-objc-function-naming
    google-objc-global-variable-declaration
    google-readability-braces-around-statements
    google-readability-casting
    google-readability-function-size
    google-readability-namespace-comments
    google-readability-todo
    google-runtime-int
    google-runtime-operator
    google-upgrade-googletest-case
    modernize-avoid-bind
    modernize-concat-nested-namespaces
    modernize-deprecated-headers
    modernize-deprecated-ios-base-aliases
    modernize-loop-convert
    modernize-make-shared
    modernize-make-unique
    modernize-pass-by-value
    modernize-raw-string-literal
    modernize-redundant-void-arg
    modernize-replace-auto-ptr
    modernize-replace-disallow-copy-and-assign-macro
    modernize-replace-random-shuffle
    modernize-return-braced-init-list
    modernize-shrink-to-fit
    modernize-unary-static-assert
    modernize-use-auto
    modernize-use-bool-literals
    modernize-use-default-member-init
    modernize-use-emplace
    modernize-use-equals-default
    modernize-use-equals-delete
    modernize-use-noexcept
    modernize-use-nullptr
    modernize-use-override
    modernize-use-transparent-functors
    modernize-use-uncaught-exceptions
    modernize-use-using
    performance-faster-string-find
    performance-for-range-copy
    performance-implicit-conversion-in-loop
    performance-inefficient-algorithm
    performance-inefficient-string-concatenation
    performance-inefficient-vector-operation
    performance-move-const-arg
    performance-move-constructor-init
    performance-no-automatic-move
    performance-no-int-to-ptr
    performance-noexcept-move-constructor
    performance-trivially-destructible
    performance-type-promotion-in-math-fn
    performance-unnecessary-copy-initialization
    performance-unnecessary-value-param
    portability-restrict-system-includes
    portability-simd-intrinsics
    readability-avoid-const-params-in-decls
    readability-braces-around-statements
    readability-const-return-type
    readability-container-size-empty
    readability-delete-null-pointer
    readability-deleted-default
    readability-else-after-return
    readability-function-size
    readability-identifier-naming
    readability-implicit-bool-conversion
    readability-inconsistent-declaration-parameter-name
    readability-isolate-declaration
    readability-misleading-indentation
    readability-misplaced-array-index
    readability-named-parameter
    readability-non-const-parameter
    readability-redundant-control-flow
    readability-redundant-declaration
    readability-redundant-function-ptr-dereference
    readability-redundant-member-init
    readability-redundant-preprocessor
    readability-redundant-smartptr-get
    readability-redundant-string-cstr
    readability-redundant-string-init
    readability-simplify-boolean-expr
    readability-simplify-subscript-expr
    readability-static-accessed-through-instance
    readability-static-definition-in-anonymous-namespace
    readability-string-compare
    readability-uniqueptr-delete-release
    readability-uppercase-literal-suffix
    readability-use-anyofallof

 Checking: /home/zhanghao/code/bustub/src/catalog/column.cppffer_pool_manager.cppain.cc
/home/zhanghao/code/bustub/src/buffer/lru_replacer.cpp:39:3: error: use auto when declaring iterators [modernize-use-auto,-warnings-as-errors]
  std::list<frame_id_t>::iterator it = map_[frame_id];
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/buffer/lru_replacer.cpp:53:7: error: use auto when declaring iterators [modernize-use-auto,-warnings-as-errors]
  if (std::list<frame_id_t>::iterator it = map_[frame_id]; it != frame_list_.end()) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      auto
 Checking: /home/zhanghao/code/bustub/src/execution/seq_scan_executor.cpputor.cppppp
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:30:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HashTableDirectoryPage *dir_p = reinterpret_cast<HashTableDirectoryPage *>(pg->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:68:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HashTableDirectoryPage *dir_p = reinterpret_cast<HashTableDirectoryPage *>(page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:78:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HASH_TABLE_BUCKET_TYPE *bkt_p = reinterpret_cast<HASH_TABLE_BUCKET_TYPE *>(page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/include/storage/page/hash_table_page_defs.h:34:32: note: expanded from macro 'HASH_TABLE_BUCKET_TYPE'
#define HASH_TABLE_BUCKET_TYPE HashTableBucketPage<KeyType, ValueType, KeyComparator>
                               ^
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:131:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HASH_TABLE_BUCKET_TYPE *bkt_page = reinterpret_cast<HASH_TABLE_BUCKET_TYPE *>(raw_page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/include/storage/page/hash_table_page_defs.h:34:32: note: expanded from macro 'HASH_TABLE_BUCKET_TYPE'
#define HASH_TABLE_BUCKET_TYPE HashTableBucketPage<KeyType, ValueType, KeyComparator>
                               ^
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:159:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HASH_TABLE_BUCKET_TYPE *bkt_page = reinterpret_cast<HASH_TABLE_BUCKET_TYPE *>(raw_page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/include/storage/page/hash_table_page_defs.h:34:32: note: expanded from macro 'HASH_TABLE_BUCKET_TYPE'
#define HASH_TABLE_BUCKET_TYPE HashTableBucketPage<KeyType, ValueType, KeyComparator>
                               ^
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:180:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HASH_TABLE_BUCKET_TYPE *bkt_page = reinterpret_cast<HASH_TABLE_BUCKET_TYPE *>(raw_page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/include/storage/page/hash_table_page_defs.h:34:32: note: expanded from macro 'HASH_TABLE_BUCKET_TYPE'
#define HASH_TABLE_BUCKET_TYPE HashTableBucketPage<KeyType, ValueType, KeyComparator>
                               ^
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:201:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HASH_TABLE_BUCKET_TYPE *new_bkt = reinterpret_cast<HASH_TABLE_BUCKET_TYPE *>(new_page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/include/storage/page/hash_table_page_defs.h:34:32: note: expanded from macro 'HASH_TABLE_BUCKET_TYPE'
#define HASH_TABLE_BUCKET_TYPE HashTableBucketPage<KeyType, ValueType, KeyComparator>
                               ^
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:262:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HASH_TABLE_BUCKET_TYPE *bkt_page = reinterpret_cast<HASH_TABLE_BUCKET_TYPE *>(raw_page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/include/storage/page/hash_table_page_defs.h:34:32: note: expanded from macro 'HASH_TABLE_BUCKET_TYPE'
#define HASH_TABLE_BUCKET_TYPE HashTableBucketPage<KeyType, ValueType, KeyComparator>
                               ^
/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp:291:3: error: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto,-warnings-as-errors]
  HASH_TABLE_BUCKET_TYPE *bkt_page = reinterpret_cast<HASH_TABLE_BUCKET_TYPE *>(raw_page->GetData());
  ^~~~~~~~~~~~~~~~~~~~~~
  auto
/home/zhanghao/code/bustub/src/include/storage/page/hash_table_page_defs.h:34:32: note: expanded from macro 'HASH_TABLE_BUCKET_TYPE'
#define HASH_TABLE_BUCKET_TYPE HashTableBucketPage<KeyType, ValueType, KeyComparator>
                               ^
 Checking: /home/zhanghao/code/bustub/src/type/bigint_type.cppcpprator.cppage.cppcppx.cpp
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:147:58: error: The result of the left shift is undefined due to shifting by '4294967295', which is greater or equal to the width of type 'int' [clang-analyzer-core.UndefinedBinaryOperatorResult,-warnings-as-errors]
  for (uint32_t idx = 0; idx < static_cast<uint32_t>(0x1 << global_depth_); idx++) {
                                                         ^
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:108:31: note: Assuming the condition is false
  for (uint32_t curr_idx = 0; curr_idx < Size(); curr_idx++) {
                              ^
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:108:3: note: Loop condition is false. Execution continues on line 126
  for (uint32_t curr_idx = 0; curr_idx < Size(); curr_idx++) {
  ^
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:128:3: note: Loop condition is true.  Entering loop body
  while (it != page_id_to_count.end()) {
  ^
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:134:9: note: Assuming 'curr_count' is not equal to 'required_count'
    if (curr_count != required_count) {
        ^
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:134:5: note: Taking true branch
    if (curr_count != required_count) {
    ^
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:137:7: note: Calling 'HashTableDirectoryPage::PrintDirectory'
      PrintDirectory();
      ^
/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp:147:58: note: The result of the left shift is undefined due to shifting by '4294967295', which is greater or equal to the width of type 'int'
  for (uint32_t idx = 0; idx < static_cast<uint32_t>(0x1 << global_depth_); idx++) {
                                                         ^
 Checking: /home/zhanghao/code/bustub/test/type/type_test.cppThe files that failed were:
['/home/zhanghao/code/bustub/src/buffer/lru_replacer.cpp',
 '/home/zhanghao/code/bustub/src/container/hash/extendible_hash_table.cpp',
 '/home/zhanghao/code/bustub/src/storage/page/hash_table_directory_page.cpp']
Note that a failing .h file will fail all the .cpp files that include it.


make[3]: *** [CMakeFiles/check-clang-tidy.dir/build.make:70: CMakeFiles/check-clang-tidy] Error 1
make[2]: *** [CMakeFiles/Makefile2:277: CMakeFiles/check-clang-tidy.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:284: CMakeFiles/check-clang-tidy.dir/rule] Error 2
make: *** [Makefile:218: check-clang-tidy] Error 2
